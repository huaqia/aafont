plugins {
    id "org.sonarqube" version "2.7.1"
}

apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
def releaseTime() {
    return new Date().format("MMdd-HHmm", TimeZone.getDefault())
}
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.xinmei365.font"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 708
        versionName "7.0.0.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "official"]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }
    signingConfigs {
        release {
            v2SigningEnabled false
            storeFile file("../qianming_font")
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }
    flavorDimensions 'channel'
    productFlavors {
        official {
            dimension 'channel'
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "official"]
        }
        p360 {
            dimension 'channel'
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }
//        OPPO {
//            dimension 'channel'
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "OPPO"]
//        }
//        VIVO {
//            dimension 'channel'
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "VIVO"]
//        }
        小米商店 {
            dimension 'channel'
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "小米商店"]
        }
//        华为 {
//            dimension 'channel'
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "华为"]
//        }
//        google_market {
//            dimension 'channel'
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "google market"]
//        }
//        应用宝 {
//            dimension 'channel'
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "应用宝"]
//        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            debuggable true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        def appName = parent.name
        variant.outputs.all { output ->
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            def targetName = variant.productFlavors.get(0).name
            def buildName = variant.buildType.name

            if (outputFileName != null && targetName != "official" && buildName == 'release' && outputFileName.endsWith('.apk')) {
                def file_path = "${appName}-${targetName}-${versionName}-${versionCode}-${buildName}-${releaseTime()}"
                def apk_dir = "$rootDir/ReleaseFonts/";
                variant.getPackageApplication().outputDirectory = new File(apk_dir)
                variant.getPackageApplication().outputScope.apkDatas.forEach {
                    apkData -> apkData.outputFileName = "${file_path}.apk"
                }
                if (variant.getBuildType().isMinifyEnabled()) {
                    variant.assemble.doLast {
                        copy {
                            from variant.mappingFile
                            into "${apk_dir}mappings/"
                            rename { String mappingName -> "${file_path}-mapping.txt"
                            }
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.github.johnpersano:supertoasts:1.3.4@aar'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'cn.bmob.android:bmob-sdk:3.7.9-rc3'
    implementation 'cn.bmob.android:bmob-im:2.1.5@aar'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.2'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.2'
    implementation('com.afollestad.material-dialogs:core:0.9.4.2') {
        transitive = true
        exclude group: 'com.android.support', module: 'support-v13'
    }
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'
    implementation 'com.umeng.umsdk:common:9.3.3'
    implementation 'com.umeng.umsdk:asms:1.1.4'
    implementation 'com.umeng.umsdk:apm:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}
repositories {
    mavenCentral()
}
